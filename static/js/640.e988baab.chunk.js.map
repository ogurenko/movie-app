{"version":3,"file":"static/js/640.e988baab.chunk.js","mappings":"oPAuCA,EA3BqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACtB,GAAoCC,EAAAA,EAAAA,MAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QACxB,OACE,iCACE,SAAC,KAAD,CAAQC,QAASF,EAAjB,2BAEA,UAAC,KAAD,CAAOG,KAAK,MAAMJ,OAAQA,EAAQK,YAAY,EAAMH,QAASA,EAA7D,WACE,SAAC,KAAD,KACA,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,SAAC,KAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,CAAaI,MAAO,GAAK,EAAzB,UACE,mBACEC,MAAM,eACNC,IAAG,wCAAmCV,EAAQW,KAC9CC,iBAAe,gBAS9B,ECuCD,EAtEkB,WAAO,IAAD,EAChBC,GAAYC,EAAAA,EAAAA,MAAZD,QACNE,QAAQC,IAAI,WAAYH,GACxB,OAAiDI,EAAAA,EAAAA,KAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,WAQlC,OAPAN,QAAQC,IAAI,SAAUG,GACtBJ,QAAQC,IAAI,WAAYI,GAExBE,EAAAA,WAAgB,WACdT,GAAWQ,EAAWE,OAAOV,GAC9B,GAAE,CAACA,EAASQ,KAGX,SAAC,KAAD,UACGH,GACC,SAAC,IAAD,KAEA,+BACE,SAAC,KAAD,WACE,SAAC,KAAD,CACAM,GAAI,EACFC,KAAM,QACNC,EAAG,OACHC,UAAW,UACXC,EAAG,GACHC,SAAU,SANZ,UAQE,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBC,SAAU,MAAOC,WAAY,OAA7C,UACE,SAAC,KAAD,WACE,wBAAKZ,EAAMV,aAIf,UAAC,KAAD,CAAeH,KAAK,OAAO0B,GAAG,WAAWC,MAAM,QAA/C,UACGC,KAAKC,MAA2B,GAArBhB,EAAMiB,cADpB,SAIGjB,EAAMkB,cACP,gBACE3B,IAAG,8CAAyCS,EAAMkB,aAClDC,IAAKnB,EAAMV,MACX8B,MAAM,QACNC,OAAO,UAGX,SAAC,KAAD,CAAgBV,SAAU,KAA1B,uBACA,SAAC,KAAD,CACEG,MAAO,YACPQ,WAAY,IACZX,SAAU,KACVY,cAAe,IAJjB,SAMGvB,EAAMwB,YAEPzB,IAAD,OACCE,QADD,IACCA,GADD,UACCA,EAAUwB,eADX,aACC,EAAmBC,KAAI,SAAC7C,GACtB,MAAqB,qBAAjBA,EAAQ8C,MACH,SAACC,EAAD,CAAO/C,QAASA,GAAcA,EAAQgD,IAExC,IACR,eAQlB,C","sources":["components/Modal.js","pages/Movie.js"],"sourcesContent":["import {\r\n  Button,\r\n  AspectRatio,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ModalTrailer = ({ trailer }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <>\r\n      <Button onClick={onOpen}>Play Trailer</Button>\r\n\r\n      <Modal size='3xl' isOpen={isOpen} isCentered={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Movie Trailer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <AspectRatio ratio={16 / 9}>\r\n              <iframe\r\n                title=\"video-player\"\r\n                src={`https://www.youtube.com/embed/${trailer.key}`}\r\n                allowFullScreen\r\n                \r\n              />\r\n            </AspectRatio>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalTrailer;\r\n","import * as React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as Chakra from \"@chakra-ui/react\";\r\nimport { useMovies } from \"../context\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst MovieCard = () => {\r\n  let { movieId } = useParams();\r\n  console.log(\"MOVIEID:\", movieId);\r\n  const { loading, movie, trailers, setMovieId } = useMovies();\r\n  console.log(\"MOVIE:\", movie);\r\n  console.log(\"TRAILER:\", trailers);\r\n\r\n  React.useEffect(() => {\r\n    movieId && setMovieId(Number(movieId));\r\n  }, [movieId, setMovieId]);\r\n\r\n  return (\r\n    <Chakra.Container>\r\n      {loading ? (\r\n        <Chakra.Spinner />\r\n      ) : (\r\n        <>\r\n          <Chakra.Center>\r\n            <Chakra.Box\r\n            mt={6}\r\n              maxW={\"445px\"}\r\n              w={\"full\"}\r\n              boxShadow={\"outline\"}\r\n              p={10}\r\n              overflow={\"hidden\"}\r\n            >\r\n              <Chakra.Stack>\r\n                <Chakra.Heading fontSize={\"2xl\"} fontFamily={\"body\"}>\r\n                  <Chakra.Link>\r\n                    <h2>{movie.title}</h2>\r\n                  </Chakra.Link>\r\n                </Chakra.Heading>\r\n\r\n                <Chakra.Circle size=\"40px\" bg=\"teal.300\" color=\"white\">\r\n                  {Math.floor(movie.vote_average * 10)}%\r\n                </Chakra.Circle>\r\n\r\n                {!!movie.poster_path && (\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n                    alt={movie.title}\r\n                    width=\"360px\"\r\n                    height=\"auto\"\r\n                  />\r\n                )}\r\n                <Chakra.Heading fontSize={\"xl\"}>Overview</Chakra.Heading>\r\n                <Chakra.Text\r\n                  color={\"green.500\"}\r\n                  fontWeight={600}\r\n                  fontSize={\"sm\"}\r\n                  letterSpacing={1.1}\r\n                >\r\n                  {movie.overview}\r\n                </Chakra.Text>\r\n                {!loading &&\r\n                  trailers?.results?.map((trailer) => {\r\n                    if (trailer.name === \"Official Trailer\") {\r\n                      return <Modal trailer={trailer} key={trailer.id} />;\r\n                    }\r\n                    return null;\r\n                  })}\r\n              </Chakra.Stack>\r\n            </Chakra.Box>\r\n          </Chakra.Center>\r\n        </>\r\n      )}\r\n    </Chakra.Container>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"names":["trailer","useDisclosure","isOpen","onOpen","onClose","onClick","size","isCentered","ratio","title","src","key","allowFullScreen","movieId","useParams","console","log","useMovies","loading","movie","trailers","setMovieId","React","Number","mt","maxW","w","boxShadow","p","overflow","fontSize","fontFamily","bg","color","Math","floor","vote_average","poster_path","alt","width","height","fontWeight","letterSpacing","overview","results","map","name","Modal","id"],"sourceRoot":""}