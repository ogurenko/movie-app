{"version":3,"file":"static/js/98.7a82908a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","pages/Home.jsx"],"sourcesContent":["import { forwardRef, chakra } from '@chakra-ui/system';\nimport { __DEV__, omit } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = function shouldShowFallbackImage(status, fallbackStrategy) {\n  return status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n};\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\", \"fallbackStrategy\", \"referrerPolicy\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n\nif (__DEV__) {\n  NativeImage.displayName = \"NativeImage\";\n}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      _props$fallbackStrate = props.fallbackStrategy,\n      fallbackStrategy = _props$fallbackStrate === void 0 ? \"beforeLoadOrError\" : _props$fallbackStrate,\n      referrerPolicy = props.referrerPolicy,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var providedFallback = fallbackSrc !== undefined || fallback !== undefined;\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n\n  var shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnoreFallbackImage\n  }));\n  var showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    className: \"chakra-image\"\n  }, shared));\n});\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, shouldShowFallbackImage, useImage };\n","import * as React from \"react\";\r\nimport * as Chakra from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMovies } from \"../context\";\r\n\r\nconst HomePage = () => {\r\n  const { movies } = useMovies();\r\n  console.log(\"MOVIES:\", { movies });\r\n\r\n  return (\r\n    <>\r\n      <Chakra.Heading textAlign=\"center\">Trending Movies</Chakra.Heading>\r\n      <Chakra.Box maxW=\"1200px\" mx=\"auto\" mt=\"20px\">\r\n        <Chakra.SimpleGrid\r\n          bg=\"gray.50\"\r\n          columns={{ sm: 2, md: 3, lg: 4 }}\r\n          spacing=\"6\"\r\n        >\r\n          {movies?.results?.map((m) => {\r\n            return (\r\n              <Chakra.Box key={m.id}>\r\n                <Link to={`/${m.id}`}>\r\n                  <Chakra.Image\r\n                    boxShadow=\"sm\"\r\n                    rounded=\"md\"\r\n                    boxSize=\"300px\"\r\n                    src={`https://image.tmdb.org/t/p/original/${m.poster_path}`}\r\n                    alt={m.title}\r\n                    width=\"360px\"\r\n                    height=\"auto\"\r\n                  />\r\n                </Link>\r\n              </Chakra.Box>\r\n            );\r\n          })}\r\n        </Chakra.SimpleGrid>\r\n      </Chakra.Box>\r\n      {/* </Chakra.Flex>\r\n        </Chakra.Stack> */}\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","React","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","__DEV__","displayName","Image$1","forwardRef","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","omit","chakra","as","className","movies","useMovies","console","log","textAlign","maxW","mx","mt","bg","columns","sm","md","lg","spacing","results","map","m","to","id","boxShadow","rounded","boxSize","poster_path","title"],"sourceRoot":""}